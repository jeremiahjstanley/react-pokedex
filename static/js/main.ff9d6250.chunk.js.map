{"version":3,"sources":["services/requests.js","components/ControlledForm/ControlledForm.js","components/ControlledForm/index.js","components/PokemonCard/PokemonCard.js","components/PokemonCard/index.js","components/PokemonContainer/PokemonContainer.js","components/PokemonContainer/index.js","components/PokemonDetails/PokemonDetails.js","components/PokemonDetails/index.js","components/App/App.js","components/App/index.js","serviceWorker.js","index.js"],"names":["fetchPokemon","a","fetch","response","json","withRouter","ControlledForm","type","weaknesses","pokemon","filterPokemon","useEffect","register","name","useForm","errors","handleSubmit","setValue","triggerValidation","resetForm","e","preventDefault","document","querySelector","reset","querySelectorAll","forEach","button","click","onSubmit","weakness","filteredPokemon","reduce","validResult","match","RegExp","join","includes","push","className","Input","error","firstName","fluid","icon","placeholder","onChange","value","Dropdown","clearable","multiple","options","search","selection","Button","style","marginBottom","color","onClick","PokemonCard","img","id","num","to","toLowerCase","src","alt","PetContainer","useState","Set","map","flat","key","text","types","pokemonCard","i","PokemonDetails","height","next_evolution","prev_evolution","weight","App","setPokemon","fetchData","exact","path","component","render","pokemonDetails","find","params","paddingTop","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ff9d6250.chunk.js","sourcesContent":["export const fetchPokemon = async () => {\n  const url = `https://raw.githubusercontent.com/Biuni/PokemonGO-Pokedex/master/pokedex.json`;\n  const response = await fetch(url);\n  return await response.json();\n};\n","import React, { useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Dropdown, Input, Button } from \"semantic-ui-react\";\nimport { useForm } from \"react-hook-form\";\n\nimport { fetchPokemon } from \"../../services/requests\";\nimport \"./ControlledForm.scss\";\n\nfunction ControlledForm({\n  type = [],\n  weaknesses = [],\n  pokemon = [],\n  filterPokemon\n}) {\n  useEffect(() => {\n    register({ name: \"name\" });\n    register({ name: \"type\" });\n    register({ name: \"weakness\" });\n  });\n\n  const {\n    errors,\n    handleSubmit,\n    register,\n    setValue,\n    triggerValidation\n  } = useForm();\n\n  const resetForm = async e => {\n    e.preventDefault();\n    const { pokemon } = await fetchPokemon();\n    filterPokemon(pokemon);\n    document.querySelector(\".pokemon-form\").reset();\n    document.querySelectorAll(\".clear\").forEach(button => button.click());\n  };\n\n  const onSubmit = ({ name, type, weakness }) => {\n    const filteredPokemon = pokemon.reduce((filteredPokemon, pokemon) => {\n      let validResult = true;\n      if (!!name && !pokemon.name.match(new RegExp(name, \"gi\"))) {\n        validResult = false;\n      }\n      if (!!type && !pokemon.type.join(\"\").includes(type.join(\"\"))) {\n        validResult = false;\n      }\n      if (\n        !!weakness &&\n        !pokemon.weaknesses.join(\"\").includes(weakness.join(\"\"))\n      ) {\n        validResult = false;\n      }\n      if (validResult) {\n        filteredPokemon.push(pokemon);\n      }\n      return filteredPokemon;\n    }, []);\n    filterPokemon(filteredPokemon);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className=\"pokemon-form\">\n      <Input\n        className=\"pokemon-form--input\"\n        error={errors.firstName ? true : false}\n        fluid\n        icon\n        name=\"name\"\n        placeholder=\"Pokemon name\"\n        onChange={async (e, { name, value }) => {\n          setValue(name, value);\n          await triggerValidation({ name });\n        }}\n      />\n      <Dropdown\n        className=\"pokemon-form--input\"\n        clearable\n        error={errors.type ? true : false}\n        fluid\n        multiple\n        name=\"type\"\n        options={type}\n        placeholder=\"type\"\n        search\n        selection\n        onChange={async (e, { name, value }) => {\n          setValue(name, value);\n          await triggerValidation({ name });\n        }}\n      />\n      <Dropdown\n        className=\"pokemon-form--input\"\n        clearable\n        error={errors.weakness ? true : false}\n        fluid\n        multiple\n        name=\"weakness\"\n        options={weaknesses}\n        placeholder=\"weakness\"\n        search\n        selection\n        onChange={async (e, { name, value }) => {\n          setValue(name, value);\n          await triggerValidation({ name });\n        }}\n      />\n      <Button style={{ marginBottom: \"1rem\" }} color=\"teal\" fluid type=\"submit\">\n        Search\n      </Button>\n      <Button fluid color=\"black\" onClick={e => resetForm(e)}>\n        Reset\n      </Button>\n    </form>\n  );\n}\n\nexport default withRouter(ControlledForm);\n","import ControlledForm from \"./ControlledForm\";\nexport default ControlledForm;\n","import React from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport \"./PokemonCard.scss\";\n\nfunction PokemonCard({ pokemon: { id, img, name, num, type, weaknesses } }) {\n  return (\n    <Link className=\"pokemon-card--link\" to={`/pokemon/${name.toLowerCase()}`}>\n      <li className=\"pokemon-card\">\n        <img src={img} alt=\"\" />\n        <h3 className=\"pokemon-card--header\">{name}</h3>\n        <small className=\"pokemon-card--small\">{num}</small>\n        <p className=\"pokemon-card--text\">type: {type.join(\", \").toLowerCase()}</p>\n        <p className=\"pokemon-card--text\">weaknesses: {weaknesses.join(\", \").toLowerCase()}</p>\n      </li>\n    </Link>\n  );\n}\n\nexport default withRouter(PokemonCard);\n","import PokemonCard from './PokemonCard'\nexport default PokemonCard","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport ControlledForm from \"../ControlledForm\";\nimport PokemonCard from \"../PokemonCard\";\n\nimport \"./PokemonContainer.scss\";\n\nfunction PokemonContainer({ pokemon = [] }) {\n  const [filteredPokemon, filterPokemon] = useState(pokemon);\n\n  const weaknesses = [\n    ...new Set(pokemon.map(({ weaknesses }) => weaknesses).flat())\n  ].map(weakness => {\n    return { key: weakness, value: weakness, text: weakness };\n  });\n\n  const types = [...new Set(pokemon.map(({ type }) => type).flat())].map(\n    type => {\n      return { key: type, value: type, text: type };\n    }\n  );\n  return (\n    <article className=\"pokemon-container\">\n      <ControlledForm\n        weaknesses={weaknesses}\n        type={types}\n        filterPokemon={filterPokemon}\n        pokemon={filteredPokemon}\n      />\n      <ul className=\"pokemon-container--cards\">\n        {!!filteredPokemon &&\n          filteredPokemon.map((pokemonCard, i) => (\n            <PokemonCard pokemon={pokemonCard} key={i} />\n          ))}\n      </ul>\n    </article>\n  );\n}\n\nexport default withRouter(PokemonContainer);\n","import PetContainer from \"./PokemonContainer\";\nexport default PetContainer;\n","import React from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\n\nimport \"./PokemonDetails.scss\";\n\nfunction PokemonDetails({ pokemon }) {\n  const {\n    height,\n    img,\n    name,\n    next_evolution,\n    num,\n    prev_evolution,\n    type,\n    weaknesses,\n    weight\n  } = pokemon;\n  return (\n    <article className=\"details\">\n      <section className=\"details--info\">\n        <h1 className=\"details--info--name\">{name}</h1>\n        <img className=\"details--info--img\" alt=\"\" src={img} />\n        <small className=\"details--info--small\">{num}</small>\n        <Link className=\"details--info--link\" to={`/`}>\n          Back\n        </Link>\n      </section>\n      <section className=\"details--stats\">\n        <p className=\"details--stats--text\">\n          type: {!!type && type.join(\", \").toLowerCase()}\n        </p>\n        <p className=\"details--stats--text\">\n          weaknesses: {weaknesses && weaknesses.join(\", \").toLowerCase()}\n        </p>\n        <p className=\"details--stats--text\">height: {height}</p>\n        <p className=\"details--stats--text\">weight: {weight}</p>\n        <ul className=\"details--stats--list\">\n          {!!prev_evolution &&\n            prev_evolution.map(({ name }, i) => {\n              return (\n                <li className=\"details--stats--list--li\" key={i}>\n                  <Link\n                    className=\"details--link\"\n                    to={`/pokemon/${name.toLowerCase()}`}\n                  >\n                    previous evolution: {name.toLowerCase()}\n                  </Link>\n                </li>\n              );\n            })}\n        </ul>\n        <ul className=\"details--stats--list\">\n          {!!next_evolution &&\n            next_evolution.map(({ name }, i) => {\n              return (\n                <li className=\"details--stats--list--li\" key={i}>\n                  <Link\n                    className=\"details--link\"\n                    to={`/pokemon/${name.toLowerCase()}`}\n                  >\n                    next evolution: {name.toLowerCase()}\n                  </Link>\n                </li>\n              );\n            })}\n        </ul>\n      </section>\n    </article>\n  );\n}\n\nexport default withRouter(PokemonDetails);\n","import PokemonDetails from \"./PokemonDetails\";\nexport default PokemonDetails;\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter, Route } from \"react-router-dom\";\n\nimport PokemonContainer from \"../PokemonContainer\";\nimport PokemonDetails from \"../PokemonDetails\";\n\nimport \"./App.scss\";\nimport { fetchPokemon } from \"../../services/requests\";\n\nfunction App() {\n  const [pokemon, setPokemon] = useState();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const { pokemon } = await fetchPokemon();\n      setPokemon(pokemon);\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <main className=\"app\">\n      <img\n        className=\"app--logo\"\n        src=\"http://pluspng.com/img-png/pokemon-logo-png-file-international-pokemon-logo-svg-1024.png\"\n        alt=\"Pokemon Logo PNG\"\n      />\n      <Route\n        exact\n        path=\"/\"\n        component={() => <PokemonContainer pokemon={pokemon} />}\n      />\n      <Route\n        exact\n        path=\"/pokemon/:name\"\n        render={({ match }) => {\n          const pokemonDetails =\n            !!pokemon &&\n            pokemon.find(\n              ({ name }) => name.toLowerCase() === match.params.name\n            );\n          return (\n            <div style={{ paddingTop: \"3rem\" }}>\n              <PokemonDetails pokemon={pokemonDetails} />\n            </div>\n          );\n        }}\n      />\n    </main>\n  );\n}\n\nexport default withRouter(App);\n","import App from \"./App\"\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}